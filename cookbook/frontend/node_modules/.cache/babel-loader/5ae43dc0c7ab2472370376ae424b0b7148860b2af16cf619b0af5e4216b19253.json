{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL;// Fetch all recipes\nexport const getRecipes=async()=>{const response=await fetch(`${API_URL}/recipes`);if(!response.ok){throw new Error('Failed to fetch recipes');}return response.json();};// Add a new recipe\nexport const addRecipe=async recipe=>{const response=await fetch(`${API_URL}/recipes`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(recipe)});if(!response.ok){throw new Error('Failed to add recipe');}};// Update an existing recipe\nexport const updateRecipe=async(id,updatedRecipe)=>{const response=await fetch(`${API_URL}/recipes/${id}`,{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify(updatedRecipe)});if(!response.ok){throw new Error('Failed to update recipe');}};export const replaceRecipe=async(id,newRecipe)=>{const response=await fetch(`${API_URL}/recipes/${id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(newRecipe)});if(!response.ok){throw new Error('Failed to replace recipe');}return response.json();// Return the updated recipe if the backend responds with it\n};// Delete a recipe\nexport const deleteRecipe=async id=>{const response=await fetch(`${API_URL}/recipes/${id}`,{method:'DELETE'});if(!response.ok){throw new Error('Failed to delete recipe');}};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getRecipes","response","fetch","ok","Error","json","addRecipe","recipe","method","headers","body","JSON","stringify","updateRecipe","id","updatedRecipe","replaceRecipe","newRecipe","deleteRecipe"],"sources":["C:/Users/danie/Documents/R0314-MERN/cookbook/frontend/src/services/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Fetch all recipes\r\nexport const getRecipes = async () => {\r\n  const response = await fetch(`${API_URL}/recipes`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch recipes');\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// Add a new recipe\r\nexport const addRecipe = async (recipe) => {\r\n  const response = await fetch(`${API_URL}/recipes`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(recipe),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to add recipe');\r\n  }\r\n};\r\n\r\n// Update an existing recipe\r\nexport const updateRecipe = async (id, updatedRecipe) => {\r\n  const response = await fetch(`${API_URL}/recipes/${id}`, {\r\n    method: 'PATCH',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(updatedRecipe),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to update recipe');\r\n  }\r\n};\r\n\r\nexport const replaceRecipe = async (id, newRecipe) => {\r\n  const response = await fetch(`${API_URL}/recipes/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(newRecipe),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to replace recipe');\r\n  }\r\n  return response.json(); // Return the updated recipe if the backend responds with it\r\n};\r\n\r\n// Delete a recipe\r\nexport const deleteRecipe = async (id) => {\r\n  const response = await fetch(`${API_URL}/recipes/${id}`, {\r\n    method: 'DELETE',\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to delete recipe');\r\n  }\r\n};\r\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAE7C;AACA,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,OAAO,UAAU,CAAC,CAClD,GAAI,CAACK,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,MAAM,EAAK,CACzC,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,OAAO,UAAU,CAAE,CACjDY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,CACF,GAAI,CAACN,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACzC,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAS,YAAY,CAAG,KAAAA,CAAOC,EAAE,CAAEC,aAAa,GAAK,CACvD,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,OAAO,YAAYkB,EAAE,EAAE,CAAE,CACvDN,MAAM,CAAE,OAAO,CACfC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACG,aAAa,CACpC,CAAC,CAAC,CACF,GAAI,CAACd,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACF,CAAC,CAED,MAAO,MAAM,CAAAY,aAAa,CAAG,KAAAA,CAAOF,EAAE,CAAEG,SAAS,GAAK,CACpD,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,OAAO,YAAYkB,EAAE,EAAE,CAAE,CACvDN,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACK,SAAS,CAChC,CAAC,CAAC,CACF,GAAI,CAAChB,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAC7C,CACA,MAAO,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;AAC1B,CAAC,CAED;AACA,MAAO,MAAM,CAAAa,YAAY,CAAG,KAAO,CAAAJ,EAAE,EAAK,CACxC,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGN,OAAO,YAAYkB,EAAE,EAAE,CAAE,CACvDN,MAAM,CAAE,QACV,CAAC,CAAC,CACF,GAAI,CAACP,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5C,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}